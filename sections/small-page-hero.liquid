{% liquid 
  comment
  case section.settings.color_scheme
    when 'background-1'
      assign tagBackground = settings.colors_font_dark
      assign tagForeground = settings.colors_background_1
    when 'background-2'
      assign tagBackground = settings.colors_font_dark
      assign tagForeground = settings.colors_background_2
    when 'inverse'
      assign tagBackground = settings.colors_font_light
      assign tagForeground = settings.colors_font_dark
    else
      assign tagBackground = settings.colors_font_dark
      assign tagForeground = settings.colors_background_1
  endcase
  endcomment

  case section.settings.heroWidth
    when 'full'
      assign heroWidth = "SectionGrid-Full"
    when 'wide'
      assign heroWidth = "SectionGrid-Wide"
    when 'narrow'
      assign heroWidth = "SectionGrid-Narrow"
    else
      assign heroWidth = "SectionGrid-Full"
  endcase

  case section.settings.alignment
    when 'left'
      assign justify = "ta-l"
      assign align = "ai-fs"
      assign jc = "jc-fs"
      assign column = "col-2-4"
      assign pl = "pl-0"
      assign margins = "ml-5"
    when 'center'
      assign justify = "ta-c"
      assign align = "ai-c"
      assign jc = "jc-c"
      assign column = "col-3"
      assign pl = "pl-8"
      assign margins = "mx-auto"
    else
      assign justify = "ta-c"
      assign jc = "jc-c"
      assign align = "ai-c"
      assign column = "col-3"
      assign pl = "pl-8"
      assign margins = "mx-auto"
  endcase

  case section.settings.fontColor
    when 'dark'
      assign color = settings.colors_font_dark
    when 'bright'
      assign color = settings.colors_font_light
    else
      assign color = settings.colors_font_light
  endcase

  case section.settings.height
    when 'high'
      assign paddings = "my-219px my-md-212px my-lg-270px"
    when 'flat'
      assign paddings = "my-56d my-md-92px my-lg-145px"
    else
      assign paddings = "my-56d my-md-92px my-lg-145px"
  endcase
%}

<div class="SectionGrid color-{{ section.settings.color_scheme }}">
  <div class="{{ heroWidth | escape }}">
    <div class="desktopgrid pagegrid" style="background-color: {{ section.settings.backgroundColor }};">
      {% if section.settings.imageDesktop %}
        <div class="col-1-5 row-1 w-100p">
          <img src="{{ section.settings.imageDesktop | img_url: '4000x' }}" alt="{{ section.settings.imageDesktop.alt }}" class="w-100p cover" id="header-img-desktop" width="1200" height="600" loading="lazy">
        </div>
      {% endif %}
      <div class="flex row ai-c {{ justify | escape }} {{ column | escape }} {{ jc | escape }} row-1 w-95p {{ pl | escape }} fs-52px lh-116 ls-m200 {{ paddings | escape }}" style="color: {{ color | escape }}">
        <div id="header-content-desktop">
        {{ section.settings.text }}
        </div>
      </div>
    </div>
    <div class="ndesktopgrid 1col 1row" style="background-color: {{ section.settings.backgroundColor }};">
      {% if section.settings.imageMobile %}
        <img src="{{ section.settings.imageMobile | img_url: '2000x' }}" alt="{{ section.settings.imageMobile.alt }}" class="col-1 row-1 w-100p cover" id="header-img-mobile" width="375" height="145" loading="lazy">
      {% endif %}
      <div class="flex column jc-c {{ align | escape }} col-1 row-1 w-100p">
        <div class="w-90p {{ margins | escape }} {{ justify | escape }} fs-6 fs-md-42px lh-125 lh-md-110 ls-m100 ls-md-m200 hyphen {{ paddings | escape }}" lang="de" style="color: {{ color | escape }}" id="header-content-mobile">
          {{ section.settings.text }}
        </div>
      </div>
    </div>
  </div>
</div>
<script>
function resizeImage(){
  const contentDesktop = document.getElementById("header-content-desktop").offsetHeight;
  const contentMobile = document.getElementById("header-content-mobile").offsetHeight;
  const idealDesktopHeight = "{{ section.settings.height }}" === "high" ? `${contentDesktop + 540}` : `${contentDesktop + 290}`;
  console.log(idealDesktopHeight);
  const idealMobileHeight = "{{ section.settings.height }}" === "high" ? `${contentMobile + 438}` : `${contentMobile + 113}`;
  const idealTabletHeight = "{{ section.settings.height }}" === "high" ? `${contentMobile + 424}` : `${contentMobile + 184}`;
  const screenWidth = document.body.offsetWidth;
  if (screenWidth >= 500) {
    document.getElementById("header-img-mobile").height = idealTabletHeight;
    document.getElementById("header-img-desktop").height = idealDesktopHeight;
  } else {
    document.getElementById("header-img-mobile").height = idealMobileHeight;
    document.getElementById("header-img-desktop").height = idealDesktopHeight;
  }
}
window.addEventListener("load",resizeImage);
window.addEventListener("resize",resizeImage);
</script>

{% schema %}
{
  "name": "kleiner Header",
  "tag": "section",
  "class": "spaced-section--full-width",
  "settings": [
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "background-1",
          "label": "t:sections.image-banner.settings.color_scheme.options__3.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.image-banner.settings.color_scheme.options__4.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.image-banner.settings.color_scheme.options__5.label"
        }
      ],
      "default": "background-1",
      "label": "Farbschema"
    },
    {
      "type": "select",
      "id": "heroWidth",
      "label": "Breite des Elements",
      "options": [
        {
          "value": "full",
          "label": "volle Bildschirmbreite"
        },
        {
          "value": "wide",
          "label": "breit (max. 1300px)"
        },
        {
          "value": "narrow",
          "label": "schmal (max. 900px)"
        }
      ],
      "default": "full"
    },
    {
      "type": "select",
      "id": "height",
      "label": "Höhe des Elements",
      "options": [
        {
          "value": "high",
          "label": "hoch (ca. 600px)"
        },
        {
          "value": "flat",
          "label": "flach (ca. 350px)"
        }
      ],
      "default": "flat"
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Ausrichtung des Textes",
      "options": [
        {
          "value": "left",
          "label": "linksbündig"
        },
        {
          "value": "center",
          "label": "zentriert"
        }
      ],
      "default": "center"
    },
    {
      "type": "color",
      "id": "backgroundColor",
      "label": "Hintergrundfarbe des Elements"
    },
    {
      "type": "select",
      "id": "fontColor",
      "label": "Schriftfarbe",
      "options": [
        {
          "value": "dark",
          "label": "dunkel"
        },
        {
          "value": "bright",
          "label": "hell"
        }
      ],
      "default": "bright"
    },
    {
      "type": "image_picker",
      "id": "imageDesktop",
      "label": "Hintergrundbild für Desktop"
    },
    {
      "type": "image_picker",
      "id": "imageMobile",
      "label": "Hintergrundbild für Mobil/Tablet"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Text"
    }
  ],
  "presets": [
    {
      "name": "kleiner Header",
      "settings": {
        "color_scheme": "background-1",
        "heroWidth": "full",
        "height": "flat",
        "alignment": "center"
      }
    }
  ]
}
{% endschema %}
